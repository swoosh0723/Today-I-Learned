# 제어문

제문은 조건에 따라 코드 블록을 실행하거나 반복 실행할 때 사용한다.  
일ㄴ적으로 코드는 위에서 아래 방향으로 순차적으로 실행된다.

## 블록문

블록문은 0개 이상의 문을 중괄호로 묶은 것으로, 코드블록 또는 블록이라고 부르기도 한다.

```javascript
// 블록문
{
  var foo = 10;
}

// 제어문
var x = 1;
if (x < 10) {
  x++;
}

// 함수 선언문
function sum(a, b) {
  return a + b;
}
```

## 조건문

### if... else문

if.. else문은 주어진 조건식의 평가 결과, 즉 논리적 참 또는 거짓에 따라 실행할 코드블록을 결정한다.<br>
삼항연산자로도 사용할 수 있다

```javascript
if (조건식) {
  // 조건식이 참이면 이 코드 블록이 실행된다
} else (조건식2) {
  // 조건식2가 참이면 이 코드 블록이 실행된다
} else {
  // 조건식이 거짓이면 이 코드 블록이 실행된다
}
```

### switch문

switch문은 주어진 표현식을 평가하여 그 값과 일치하는 표현식을 갖는 case문으로 실행 흐름을 옮긴다.<br>

```javascript
switch (표현식) {
  case 표현식1:
    // switch 문의 표현식과 표현식1이 일치하면 실행될 문;
    break;
  case 표현식2:
    // switch 문의 표현식과 표현식2가 일치하면 실행될 문;
    break;
  default:
  // switch문의 표현식과 일치하는 case문이 없을 때 실행될 문;
}
```

break문은 코드 블록에서 탈출하는 역할을 한다.<br>
break문이 없다면 case문의 표현식과 일치하지 않더라도 실행 흐름이 다음 case문으로 연이어 이동한다.

```javascript
var month = 2;
var monthName;

switch (month) {
  case 1:
    monthName = "January";
    break;
  case 2:
    monthName = "February";
    break;
  default:
    monthname = "Invalid month";
}

console.log(monthName); // February;
```

## 반복문

반복문은 조건식의 평가 결과가 참인 경우 코드 블록이 실행한다. <br>
그 후 조건식을 다시 평가하여 여전히 참인 경우 코드 블록을 다시 실행한다. 이는 조건식이 거짓일 때까지 반복된다.<br>
for문, while문, do...while문 제공한다

### for문

for문은 조건식이 거짓으로 평가될 때까지 코드 블록을 반복 실행한다. 가장 일반적으로 사용되는 for문의 형태는 다음과 같다

```javascript
for (var i = 0; i < 2; i++) {
  console.log(i++);
}
```

### while문

while문은 주어진 조건식 평가 결과가 참이면 코드블록을 계속해서 반복 실행한다.<br>
for문은 반복 횟수가 명확할 때 주로 사용하고 while문은 반복 횟수가 불명확할 때 주로 사용한다.<br

### break문

레이블문, 반복문 또는 swich문의 코드 블록을 탈출한다.
